{"version":3,"file":"component---src-templates-blog-post-js-f3fbdcaac38ea0f5aac6.js","mappings":"+NAOA,MA+FaA,EAAO,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,UAxGyB,IAIlB,IAAD,MAHJN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEC,EAAMR,eAAgBC,GAAM,SACpDQ,EAAQ,YACRC,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAH,EAAKI,oBAAY,aAAjB,EAAmBV,QAAK,SACpC,OAAEW,EAAM,YAAEC,GAAgBJ,EAShC,OAPAK,EAAAA,WAAgB,KACd,GAAsB,oBAAXC,OAAwB,EACbA,OAAOC,aAAe,IAC9BC,KAAK,CAAC,EACpB,IACC,IAGD,gBAAC,IAAM,CAACT,SAAUA,EAAUP,MAAOS,GACjC,2BACEQ,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BAEE,sBAAIC,SAAS,YAAYrB,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYoB,MAEzB,2BACE,uBAAKJ,UAAU,cACVK,MAAO,CAAEC,QAAS,SAClB,iBAAe,0BACf,eAAa,aACb,iBAAe,OACf,6BAA2B,SAChC,0BACEC,OAAK,EACLC,IAAI,gGACJC,YAAY,cACd,qFAIIf,GACA,2BACE,0BAAI,IAAEA,EAAO,UACb,0BACGC,EAAYe,KAAKC,GAChB,sBAAIC,IAAKD,EAAWE,OAAOC,MACzB,gBAAC,EAAAC,KAAI,CAACC,GAAIL,EAAWE,OAAOC,MAAOH,EAAW3B,YAAYD,aAOtE,2BACEkC,wBAAyB,CAAEC,OAAQpC,EAAKqC,MACxChB,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAG,QAIR,uBAAKH,UAAU,iBACb,sBACEK,MAAO,CACLC,QAAQ,OACRc,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGpC,GACC,gBAAC,EAAA4B,KAAI,CAACC,GAAI7B,EAAS0B,OAAOC,KAAMU,IAAI,QAAO,KACtCrC,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAA2B,KAAI,CAACC,GAAI5B,EAAKyB,OAAOC,KAAMU,IAAI,QAC7BpC,EAAKJ,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n  pageContext,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const { series, seriesPosts } = pageContext;\n\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const adsbygoogle = window.adsbygoogle || [];\n      adsbygoogle.push({});\n    }\n  }, []);\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          \n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n                {/* Google AdSense Code */}\n      <div>\n        <ins className=\"adsbygoogle\"\n             style={{ display: \"block\" }}\n             data-ad-client=\"ca-pub-1067668052326016\"\n             data-ad-slot=\"5984178559\"\n             data-ad-format=\"auto\"\n             data-full-width-responsive=\"true\"></ins>\n        <script\n          async\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1067668052326016\"\n          crossOrigin=\"anonymous\"></script>\n        <script>\n          {`(adsbygoogle = window.adsbygoogle || []).push({});`}\n        </script>\n      </div>\n          { series && (\n            <div>\n              <h2>\"{series}\" 시리즈 </h2>\n              <ul>\n                {seriesPosts.map((seriesPost) => (\n                  <li key={seriesPost.fields.slug}>\n                    <Link to={seriesPost.fields.slug}>{seriesPost.frontmatter.title}</Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        series\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"names":["Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","site","location","pageContext","siteTitle","siteMetadata","series","seriesPosts","React","window","adsbygoogle","push","className","itemScope","itemType","itemProp","date","style","display","async","src","crossOrigin","map","seriesPost","key","fields","slug","Link","to","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","rel"],"sourceRoot":""}